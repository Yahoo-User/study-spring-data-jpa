plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	testCompileOnly {
		extendsFrom testAnnotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// OCI (Oracle Cloud Infrastructure)에 오류없이 연결하려면,
	// 아래와 같이, 하위 의존성 중에 5개를 제외시켜서 설정해야 합니다.
	implementation('com.oracle.database.jdbc:ojdbc8-production') {
		exclude group: 'com.oracle.database.ha',    module: 'simplefan'
		exclude group: 'com.oracle.database.ha',    module: 'ons'
		exclude group: 'com.oracle.database.jdbc',  module: 'rsi'
		exclude group: 'com.oracle.database.xml',   module: 'xdb'
		exclude group: 'com.oracle.database.xml',   module: 'xmlparserv2'
	}
}

test {
//tasks.named('test') {
	useJUnitPlatform()
}
